import 'package:flutter/material.dart';

void main() {
  runApp(FoodApp());
}

class FoodApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Food App',
      theme: ThemeData(
        primarySwatch: Colors.green,
      ),
      home: CartPage(),
    );
  }
}

class CartPage extends StatefulWidget {
  @override
  _CartPageState createState() => _CartPageState();
}

class _CartPageState extends State<CartPage> {
  List<CartItem> cartItems = [
    CartItem(
      product: Product(
        name: 'Apel',
        image: 'assets/apple.jpg',
        price: 2.99,
      ),
      quantity: 2,
    ),
    CartItem(
      product: Product(
        name: 'Pisang',
        image: 'assets/banana.jpg',
        price: 1.99,
      ),
      quantity: 3,
    ),
    CartItem(
      product: Product(
        name: 'Strawberry',
        image: 'assets/strawberry.jpg',
        price: 3.49,
      ),
      quantity: 1,
    ),
  ];

  double calculateTotalPrice() {
    double totalPrice = 0;
    for (var item in cartItems) {
      totalPrice += item.product.price * item.quantity;
    }
    return totalPrice;
  }

  void removeItemFromCart(int index) {
    setState(() {
      cartItems.removeAt(index);
    });
  }

  void increaseQuantity(int index) {
    setState(() {
      cartItems[index].quantity++;
    });
  }

  void decreaseQuantity(int index) {
    setState(() {
      if (cartItems[index].quantity > 1) {
        cartItems[index].quantity--;
      }
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Keranjang'),
      ),
      body: ListView.builder(
        itemCount: cartItems.length,
        itemBuilder: (BuildContext context, int index) {
          return ListTile(
            leading: Image.asset(
              cartItems[index].product.image,
              width: 60,
              height: 60,
            ),
            title: Text(cartItems[index].product.name),
            subtitle: Text('\$${cartItems[index].product.price.toStringAsFixed(2)}'),
            trailing: Row(
              mainAxisSize: MainAxisSize.min,
              children: [
                IconButton(
                  icon: Icon(Icons.remove),
                  onPressed: () => decreaseQuantity(index),
                ),
                Text(cartItems[index].quantity.toString()),
                IconButton(
                  icon: Icon(Icons.add),
                  onPressed: () => increaseQuantity(index),
                ),
              ],
            ),
            onLongPress: () => removeItemFromCart(index),
          );
        },
      ),
      bottomNavigationBar: Padding(
        padding: EdgeInsets.all(16.0),
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceBetween,
          children: [
            Text(
              'Total: \$${calculateTotalPrice().toStringAsFixed(2)}',
              style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
            ),
            ElevatedButton(
              onPressed: () {
                // Logic to proceed with checkout
                showDialog(
                  context: context,
                  builder: (BuildContext context) {
                    return AlertDialog(
                      title: Text('Konfirmasi Pembayaran'),
                      content: Text('Anda akan melakukan pembayaran sebesar \$
